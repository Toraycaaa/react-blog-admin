{"version":3,"sources":["Pages/AddArticle.js","Pages/ArticleList.js","Pages/AdminIndex.js","Pages/Main.js","index.js"],"names":["Select","Option","Input","TextArea","AddArticle","Modal","confirm","Layout","Header","Content","Footer","Sider","Menu","SubMenu","Main","props","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4YAQiBA,IAAVC,OACYC,IAAZC,SAwQQC,I,uBC5QGC,IAAXC,Q,4BCEoCC,IAAnCC,OAAmCD,IAA3BE,QAA2BF,IAAlBG,OAAkBH,IAAVI,MACbC,IAAZC,Q,mCCUOC,MAbf,SAAcC,KCCdC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.a0e789c7.chunk.js","sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport marked from 'marked'\r\nimport '../static/css/AddArticle.css'\r\nimport {Row, Col, Input, Select, Button, DatePicker, message} from 'antd'\r\nimport axios from 'axios'\r\nimport servicePath from '../config/apiUrl'\r\nimport { OmitProps } from 'antd/lib/transfer/ListBody';\r\n\r\nconst {Option} = Select\r\nconst {TextArea} = Input\r\n\r\n\r\n\r\nfunction AddArticle(props) {\r\n    \r\n    const [articleId,setArticleId] = useState(0)  // 文章的ID，如果是0说明是新增加，如果不是0，说明是修改\r\n    const [articleTitle,setArticleTitle] = useState('')   //文章标题\r\n    const [articleContent , setArticleContent] = useState('')  //markdown的编辑内容\r\n    const [markdownContent, setMarkdownContent] = useState('预览内容') //html内容\r\n    const [introducemd,setIntroducemd] = useState()            //简介的markdown内容\r\n    const [introducehtml,setIntroducehtml] = useState('等待编辑') //简介的html内容\r\n    const [showDate,setShowDate] = useState()   //发布日期\r\n    const [updateDate,setUpdateDate] = useState() //修改日志的日期\r\n    const [typeInfo ,setTypeInfo] = useState([]) // 文章类别信息\r\n    const [selectedType,setSelectType] = useState() //选择的文章类别\r\n\r\n    useEffect(()=>{\r\n        getTypeInfo()\r\n        //获取文章id\r\n        let tmpId = props.match.params.id\r\n        // 如果有ID\r\n        if(tmpId){\r\n            setArticleId(tmpId)\r\n            getArticleById(tmpId)\r\n        }\r\n    },[])\r\n\r\n    marked.setOptions({\r\n        renderer: marked.Renderer(),\r\n        gfm: true,\r\n        pedantic: false,\r\n        sanitize: false,\r\n        tables: true,\r\n        breaks: false,\r\n        smartLists: true,\r\n        smartypants: false,\r\n      }); \r\n\r\n      const changeContent = (e) =>{\r\n          setArticleContent(e.target.value)\r\n          let html = marked(e.target.value)\r\n          setMarkdownContent(html)\r\n      }\r\n\r\n      const changeIntroduce = (e) => {\r\n          setIntroducemd(e.target.value)\r\n          let html = marked(e.target.value)\r\n          setIntroducehtml(html)\r\n      }\r\n\r\n      const getTypeInfo = () =>{\r\n          axios({\r\n              method:'get',\r\n              url:servicePath.getTypeInfo,\r\n              //跨域cookie\r\n              withCredentials: true\r\n          }).then(\r\n                res=>{\r\n                    if(res.data.data == 'unlogin'){\r\n                        //清空本地存储\r\n                        localStorage.removeItem('openId')\r\n                        //跳转到首页\r\n                        props.history.push('/')\r\n                    }else{\r\n                        setTypeInfo(res.data.data)\r\n                    }\r\n                }\r\n          )\r\n      }\r\n\r\n      const selectTypeHandler = (value) => {\r\n          setSelectType(value + 1)\r\n      }\r\n\r\n      const saveArticle = () => {\r\n          //如果类型不为空\r\n        if(!selectedType){\r\n            message.error('Please select the article type!')\r\n            return false\r\n        }else if(!articleTitle){\r\n            message.error('Please select the article title!')\r\n            return false\r\n        }else if(!articleContent){\r\n                message.error('Please select the article content!')\r\n                return false\r\n        }else if(!introducemd){\r\n                message.error('Please select the article introduction!')\r\n                return false\r\n        }else if(!showDate){\r\n                message.error('Please select the date!')\r\n                return false\r\n        }else{\r\n            console.log('909090---------------------------')\r\n            let dataProps={}   //传递到接口的参数\r\n            dataProps.type_id = selectedType \r\n            dataProps.title = articleTitle\r\n            dataProps.article_content =articleContent\r\n            dataProps.introduce =introducemd\r\n            // let datetext= showDate.replace('-','/') //把字符串转换成时间戳\r\n            // dataProps.addTime =(new Date(datetext).getTime())\r\n            dataProps.addTime = showDate\r\n\r\n            \r\n            console.log(dataProps)\r\n\r\n            \r\n        if(articleId==0){\r\n            dataProps.view_count =Math.ceil(Math.random()*100)+1000\r\n            axios({\r\n                method:'post',\r\n                url:servicePath.addArticle,\r\n                data:dataProps,\r\n                withCredentials: true\r\n            }).then(\r\n                res=>{\r\n                    setArticleId(res.data.insertId)\r\n                    if(res.data.isSuccess){\r\n                        message.success('文章添加成功')\r\n                    }else{\r\n                        message.error('文章添加失败');\r\n                    }\r\n\r\n                }\r\n            )\r\n            }else{\r\n                dataProps.id = articleId\r\n                axios({\r\n                    method:'post',\r\n                    url: servicePath.updateArticle,\r\n                    data: dataProps,\r\n                    withCredentials: true\r\n                }).then(\r\n                    res => {\r\n                        if(res.data.isSuccess){\r\n                            message.success('The article is saved.')\r\n                        }else{\r\n                            message.error('Save Fail!')\r\n                        }\r\n                    }\r\n                )\r\n            }\r\n        \r\n        }\r\n\r\n      }\r\n    \r\n      const getArticleById = (id) =>{\r\n          axios(servicePath.getArticleById + id,{\r\n              withCredentials:true\r\n          }).then(\r\n              res=>{\r\n                  let articleInfo = res.data.data[0]\r\n                  setArticleTitle(articleInfo.title)\r\n                  setArticleContent(articleInfo.article_content)\r\n                  let html = marked(articleInfo.article_content)\r\n                  setMarkdownContent(html)\r\n                  setIntroducemd(articleInfo.introduce)\r\n                  let tmpInt = marked(articleInfo.introduce)\r\n                  setIntroducehtml(tmpInt)\r\n                  setShowDate(articleInfo.addTime)\r\n                  setSelectType(articleInfo.typeId)\r\n              }\r\n          )\r\n      }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Row gutter={5}>\r\n                <Col span={18}>\r\n                    <Row gutter={10}>\r\n                        <Col span={20}>\r\n                            <Input placeholder='title'\r\n                                value={articleTitle}\r\n                                size='large'\r\n                                onChange={(e)=>{setArticleTitle(e.target.value)}}\r\n                                />\r\n                        </Col>\r\n\r\n                        <Col span={4}>\r\n                            &nbsp;\r\n                            {/* 下拉框默认为1 */}\r\n                            {/* 设置类型改变 */}\r\n                            <Select defaultValue='Type' size='large' onChange={selectTypeHandler}>\r\n                                {/* 下拉框选项 */}\r\n                                {\r\n                                    typeInfo.map((item,index)=>{\r\n                                        return (<Option \r\n                                           key={index} \r\n                                           value ={item.id}>{item.typeName}</Option>)\r\n                                    })\r\n                                }\r\n                                \r\n                            </Select>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row gutter={10}>\r\n                        <Col span={12}>\r\n                            <TextArea\r\n                                className='markdown-content'\r\n                                rows={35}\r\n                                placeholder='Article Content'\r\n                                onChange={changeContent}\r\n                                value={articleContent}\r\n                                />\r\n                        </Col>\r\n\r\n                        <Col span={12}>\r\n                            <div className='show-html'dangerouslySetInnerHTML={{__html:markdownContent}}> \r\n\r\n                            </div>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Col>\r\n                {/* 右侧 */}\r\n                <Col span={6}>\r\n                    <Row>\r\n                        <Col span={24}>\r\n                            <Button size='large'>\r\n                                暂存文章\r\n                            </Button>&nbsp;\r\n                            <Button type='primary' size='large' onClick={saveArticle}>\r\n                                发布文章\r\n                            </Button>\r\n                            <br />\r\n                        </Col>\r\n\r\n                        <Col span={24}>\r\n                            <br />\r\n                            <TextArea \r\n                                rows={4} \r\n                                value={introducemd}  \r\n                                onChange={changeIntroduce} \r\n                                onPressEnter={changeIntroduce}\r\n                                placeholder=\"文章简介\"\r\n                                value={introducemd}\r\n                            />\r\n                            <div \r\n                                className=\"introduce-html\"\r\n                                dangerouslySetInnerHTML = {{__html:'文章简介：'+introducehtml}} >\r\n                            </div>\r\n                        </Col>\r\n\r\n                        <Col span={12}>\r\n                            <div className='date-select'>\r\n                                <DatePicker\r\n                                    format=\"YYYY-MM-DD HH:mm:ss\"\r\n                                    placeholder='发布日期'\r\n                                    size='size'\r\n                                    // 设置日期改变\r\n                                    onChange={(value,dateString)=>{setShowDate(dateString)}}\r\n                                    />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddArticle\r\n","import React, {useState,useEffect} from 'react';\r\nimport {List, Row, Col, Modal, message,Button} from 'antd'\r\nimport axios from 'axios'\r\nimport servicePath from '../config/apiUrl'\r\nimport '../static/css/ArticleList.css'\r\nconst {confirm} = Modal\r\n\r\nfunction ArticleList(props) {\r\n    const [list,setList] = useState([])\r\n\r\n    useEffect(()=>{\r\n        getList()\r\n    },[])\r\n\r\n    const getList = ()=>{\r\n        axios({\r\n            method:'get',\r\n            url: servicePath.getArticleList,\r\n            withCredentials: true,\r\n            header:{ 'Access-Control-Allow-Origin':'*' }\r\n        }).then(\r\n        res=>{\r\n           setList(res.data.list)\r\n        }\r\n        )\r\n    } \r\n\r\n    //删除文章方法\r\n    const delArticle = (id) =>{\r\n        //确认对话框\r\n        confirm(\r\n            {\r\n                title: '确定要删除这篇博文吗？',\r\n                content:'文章将永久删除！',\r\n                onOk(){\r\n                    axios(servicePath.delArticle + id,{withCredentials:true}).then(\r\n                        res=>{\r\n                            message.success('文章删除成功！')\r\n                            //重新获得列表, 工作中不会请求服务器，要在前台解决\r\n                            getList()\r\n                        }\r\n                    )\r\n                },\r\n                onCancel(){\r\n                    message.success('已取消')\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    //修改文章的跳转\r\n    const updateArticle = (id) =>{\r\n        props.history.push('/index/add/' + id)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n             <List\r\n                header={\r\n                    <Row className=\"list-div\">\r\n                        <Col span={8}>\r\n                            <b>标题</b>\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            <b>类别</b>\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            <b>发布时间</b>\r\n                        </Col>\r\n                        \r\n                        <Col span={4}>\r\n                            <b>浏览量</b>\r\n                        </Col>\r\n\r\n                        <Col span={4}>\r\n                            <b>操作</b>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                }\r\n                bordered\r\n                dataSource={list}\r\n                renderItem={item => (\r\n                    <List.Item>\r\n                        <Row className=\"list-div\">\r\n                            <Col span={8}>\r\n                                {item.title}\r\n                            </Col>\r\n                            <Col span={4}>\r\n                             {item.typeName}\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                {item.addTime}\r\n                            </Col>\r\n                            <Col span={4}>\r\n                              {item.view_count}\r\n                            </Col>\r\n\r\n                            <Col span={4}>\r\n                              <Button type=\"primary\" onClick={()=>{updateArticle(item.id)}}>修改</Button>&nbsp;\r\n                             <Button onClick={()=>{delArticle(item.id)}}>删除 </Button>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </List.Item>\r\n                )}\r\n                />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArticleList\r\n","import { Layout, Menu, Breadcrumb } from 'antd';\r\nimport '../static/css/AdminIndex.css'\r\nimport React ,{useState} from 'react';\r\nimport {Route}  from 'react-router-dom'\r\nimport AddArticle from './AddArticle'\r\nimport ArticleList from './ArticleList'\r\nimport {PieChartOutlined, DesktopOutlined, UserOutlined, FileOutlined} from '@ant-design/icons';\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\n\r\nfunction AdminIndex(props){\r\n    //标签栏默认打开\r\n    const [collapsed, setCollapsed] = useState(false)\r\n\r\n\r\n \r\n\r\n  const onCollapse = collapsed => {\r\n    setCollapsed(collapsed)\r\n  };\r\n\r\n  //点击跳转\r\n  const handleClickArticle = e =>{\r\n    if(e.key =='addArticle'){\r\n      props.history.push('/index/add')\r\n    }else{\r\n      props.history.push('/index/list')\r\n    }\r\n  }\r\n\r\n  \r\n    return (\r\n      <Layout style={{ minHeight: '100vh' }}>\r\n        <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\r\n          <div className=\"logo\" />\r\n          <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n            <Menu.Item key=\"1\">\r\n            <PieChartOutlined />\r\n              <span>工作台</span>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\">\r\n            <DesktopOutlined />\r\n              <span>添加文章</span>\r\n            </Menu.Item>\r\n            <SubMenu\r\n              key=\"sub1\"\r\n              onClick={handleClickArticle}\r\n              title={\r\n                <span>\r\n                  <UserOutlined />\r\n                  <span>文章管理</span>\r\n                </span>\r\n              }\r\n            >\r\n              <Menu.Item key=\"addArticle\">添加文章</Menu.Item>\r\n              <Menu.Item key=\"articleList\">文章列表</Menu.Item>\r\n              \r\n            </SubMenu>\r\n            \r\n            <Menu.Item key=\"9\">\r\n            <FileOutlined />\r\n              <span>留言管理</span>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout>\r\n          \r\n          <Content style={{ margin: '0 16px' }}>\r\n            <Breadcrumb style={{ margin: '16px 0' }}>\r\n              <Breadcrumb.Item>后台管理</Breadcrumb.Item>\r\n              <Breadcrumb.Item>工作台</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            \r\n            <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\r\n                <div>\r\n                  {/* 配置路由 */}\r\n                  {/* 嵌套路由，上层的exact要删除 */}\r\n                    <Route path=\"/index/\"  exact component={AddArticle} />\r\n                    <Route path=\"/index/add/\"  exact  component={AddArticle} />\r\n                    <Route path=\"/index/add/:id\"  exact  component={AddArticle} />\r\n                    <Route path=\"/index/list/\" exact component={ArticleList} />\r\n                    \r\n                </div>\r\n            </div>\r\n          </Content>\r\n          <Footer style={{ textAlign: 'center' }}>JSPang.com</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n\r\nexport default AdminIndex","import React from 'react'\r\nimport {BrowserRouter as Router,Route} from 'react-router-dom'\r\nimport AdminIndex from './AdminIndex'\r\nimport Login from './Login'\r\n\r\nfunction Main(props) {\r\n    \r\n\r\n    return (\r\n        //嵌套路由，上层的exact要删除\r\n        <Router>\r\n            <Route path='/' exact component={Login} />\r\n           <Route path='/login' exact component={Login} />\r\n           <Route path='/index' component={AdminIndex} />\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Main","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Main from './Pages/Main';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}